<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
    <bean id="scanstoreController_Remote" class="coldspring.aop.framework.RemoteFactoryBean"
        lazy-init="false">
        <property name="target">
        <ref bean="scanStoreController"/>
        </property>
        <property name="serviceName">
            <value>RemoteScanstoreController</value>
        </property>
        <property name="relativePath">
            <value>remote</value>
        </property>
        <property name="remoteMethodNames">
            <value>importZipFile,uploadZipFile,updateScan,updateScans,searchScans,getScan,moveScan,updateScanImage,deleteScan</value>
        </property>
      <property name="useJsonReturnType">
          <value>true</value>
      </property>
      <property name="interceptorNames">
            <list>
                <value>securityAdvisor</value>
                <value>jsonDeserializePageScanAdvisor</value>
                <value>errorAdvisor</value>
                <value>jsonSerializeAdvisor</value>
            </list>
        </property>
    </bean>

    <bean id="scanImportService_Remote" class="coldspring.aop.framework.RemoteFactoryBean"
        lazy-init="false">
        <property name="target">
            <ref bean="scanImportService"/>
        </property>
        <property name="serviceName">
            <value>RemoteScanImportService</value>
        </property>
        <property name="relativePath">
            <value>remote</value>
        </property>
        <property name="remoteMethodNames">
            <value>getImportScenarios,sendScanImportToRepository,getPendingImports,getImportDirectory,deleteImportDirectory</value>
        </property>
        <property name="useJsonReturnType">
            <value>true</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>securityAdvisor</value>
                <value>jsonDeserializeImportDirectoryAdvisor</value>
                <value>jsonDeserializeImportDirectoryWithFactoryAdvisor</value>
                <value>errorAdvisor</value>
                <value>jsonSerializeAdvisor</value>
            </list>
        </property>
    </bean>

    <bean id="userSessionController_Remote" class="coldspring.aop.framework.RemoteFactoryBean"
        lazy-init="false">
        <property name="target">
            <ref bean="userSessionController"/>
        </property>
        <property name="serviceName">
            <value>RemoteUserSessionController</value>
        </property>
        <property name="relativePath">
            <value>remote</value>
        </property>
        <property name="remoteMethodNames">
            <value>getLoggedInUser,loginUser,logoutUser</value>
        </property>
        <property name="useJsonReturnType">
            <value>true</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>jsonDeserializeSessionAdvisor</value>
                <value>errorAdvisor</value>
                <value>jsonSerializeAdvisor</value>
            </list>
        </property>
    </bean>

    <bean id="userService_Remote" class="coldspring.aop.framework.RemoteFactoryBean"
        lazy-init="false">
        <property name="target">
            <ref bean="userService"/>
        </property>
        <property name="serviceName">
            <value>RemoteUserService</value>
        </property>
        <property name="relativePath">
            <value>remote</value>
        </property>
        <property name="remoteMethodNames">
            <value>getUsers,updateUser,deleteUser</value>
        </property>
        <property name="useJsonReturnType">
            <value>true</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>securityAdvisor</value>
                <value>jsonDeSerializeUserAdvisor</value>
                <value>errorAdvisor</value>
                <value>jsonSerializeAdvisor</value>
            </list>
        </property>
    </bean>

    <bean id="scanImage_Remote" class="coldspring.aop.framework.RemoteFactoryBean"
        lazy-init="false">
        <property name="target">
            <ref bean="imageService"/>
        </property>
        <property name="serviceName">
            <value>RemoteImageService</value>
        </property>
        <property name="relativePath">
            <value>remote</value>
        </property>
        <property name="remoteMethodNames">
            <value>addImage,removeImage,replaceImage,getImages,updateImage</value>
        </property>
        <property name="useJsonReturnType">
            <value>true</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>securityAdvisor</value>
                <value>JsonDeSerializeScanImageAdvisor</value> 
                <value>errorAdvisor</value>
                <value>jsonSerializeAdvisor</value>
            </list>
        </property>
    </bean>

    <bean id="archiveFile_Remote" class="coldspring.aop.framework.RemoteFactoryBean"
        lazy-init="false">
        <property name="target">
            <ref bean="archiveService"/>
        </property>
        <property name="serviceName">
            <value>RemoteArchiveService</value>
        </property>
        <property name="relativePath">
            <value>remote</value>
        </property>
        <property name="remoteMethodNames">
            <value>getIntitutions,getArchives,getFiles,getStatuses,getLanguages,updateArchiveFile,deleteArchiveFile,getFilesListForPublishing</value>
        </property>
        <property name="useJsonReturnType">
            <value>true</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>securityAdvisor</value>
                <value>JsonDeSerializeArchiveAdvisor</value>
                <value>errorAdvisor</value>
                <value>jsonSerializeAdvisor</value>
            </list>
        </property>
    </bean>

</beans>